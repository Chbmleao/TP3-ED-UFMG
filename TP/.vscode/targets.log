make all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 4.2.1
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2016 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Mon Jul 18 16:46:53 2022

# Variables

# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# environment
WSLENV = VSCODE_WSL_EXT_LOCATION/up
# default
.SHELLFLAGS := -c
# makefile (from 'Makefile', line 38)
OBJ = $(patsubst $(SRC_FOLDER)%.cpp, $(OBJ_FOLDER)%.o, $(SRC))
# makefile (from 'Makefile', line 37)
SRC = $(wildcard $(SRC_FOLDER)*.cpp)
# makefile (from 'Makefile', line 27)
INCLUDE_FOLDER = ./include/
# makefile (from 'Makefile', line 36)
TARGET = tp3.exe
# automatic
?D = $(patsubst %/,%,$(dir $?))
# automatic
@D = $(patsubst %/,%,$(dir $@))
# makefile (from 'Makefile', line 39)
EXE = $(BIN_FOLDER)/tp3.exe
# automatic
@F = $(notdir $@)
# makefile
CURDIR := /home/carlos/TPS/TP3/TP
# makefile
SHELL = /bin/sh
# environment
VSCODE_NLS_CONFIG = {"locale":"en","availableLanguages":{}}
# environment
_ = /home/carlos/.vscode-server/bin/b06ae3b2d2dbfe28bca3134cc6be65935cdfea6a/node
# makefile (from 'Makefile', line 1)
MAKEFILE_LIST :=  Makefile
# makefile (from 'Makefile', line 40)
ANALISAMEM = ./analisamem/bin/analisamem
# 'override' directive
GNUMAKEFLAGS := 
# makefile (from 'Makefile', line 24)
CXXFLAGS = -pg -std=c++11 -g -Wall
# environment
VSCODE_CWD = /mnt/d/Microsoft VS Code
# default
MAKE_HOST := x86_64-pc-linux-gnu
# environment
PATH = /home/carlos/.vscode-server/bin/b06ae3b2d2dbfe28bca3134cc6be65935cdfea6a/bin/remote-cli:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/Python310/Scripts/:/mnt/c/Python310/:/mnt/d/anaconda3:/mnt/d/anaconda3/Library/mingw-w64/bin:/mnt/d/anaconda3/Library/usr/bin:/mnt/d/anaconda3/Library/bin:/mnt/d/anaconda3/Scripts:/mnt/c/MinGW/bin:/mnt/c/Windows/system32:/mnt/c/Windows:/mnt/c/Windows/System32/Wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/FFmpeg:/mnt/c/Program Files/nodejs/:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files/Go/bin:/mnt/c/Users/Micro/AppData/Local/Microsoft/WindowsApps:/mnt/d/Microsoft VS Code/bin:/mnt/c/Users/Micro/AppData/Roaming/npm:/mnt/c/Users/Micro/go/bin:/mnt/c/Program Files/PostgreSQL/14/bin
# environment
LSCOLORS = Gxfxcxdxbxegedabagacad
# environment
ELECTRON_RUN_AS_NODE = 1
# environment
VSCODE_IPC_HOOK_CLI = /tmp/vscode-ipc-d5ca750e-b1f1-4c59-a0bc-54a68b5f700b.sock
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
# environment
LS_COLORS = rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
# automatic
%F = $(notdir $%)
# makefile (from 'Makefile', line 32)
OUT_FOLDER = ./out/
# environment
PWD = /home/carlos/TPS/TP3/TP
# default
.LOADED := 
# environment
WSL_INTEROP = /run/WSL/128_interop
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
HOME = /home/carlos
# environment
LOGNAME = carlos
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = true
# environment
ZSH = /home/carlos/.oh-my-zsh
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
MAKELEVEL := 0
# default
MAKE = $(MAKE_COMMAND)
# makefile (from 'Makefile', line 30)
SRC_FOLDER = ./src/
# default
MAKECMDGOALS := all
# environment
SHLVL = 0
# makefile (from 'Makefile', line 23)
CC = g++
# makefile (from 'Makefile', line 28)
BIN_FOLDER = ./bin/
# default
MAKE_VERSION := 4.2.1
# environment
USER = carlos
# makefile
.DEFAULT_GOAL := all
# environment
NAME = DESKTOP-18BCSG9
# environment
LESS = -R
# automatic
%D = $(patsubst %/,%,$(dir $%))
# environment
VSCODE_WSL_EXT_LOCATION = /mnt/c/Users/Micro/.vscode/extensions/ms-vscode-remote.remote-wsl-0.66.3
# default
MAKE_COMMAND := make
# environment
OLDPWD = /mnt/d/Microsoft VS Code
# default
.VARIABLES := 
# automatic
*F = $(notdir $*)
# makefile (from 'Makefile', line 31)
ASSETS = ./assets/
# makefile
MAKEFLAGS = pqrR
# environment
MFLAGS = -pqrR
# automatic
*D = $(patsubst %/,%,$(dir $*))
# makefile (from 'Makefile', line 35)
MAIN = Main
# automatic
+D = $(patsubst %/,%,$(dir $+))
# automatic
+F = $(notdir $+)
# environment
VSCODE_HANDLES_SIGPIPE = true
# default
MAKEFILES := 
# automatic
<F = $(notdir $<)
# environment
PAGER = less
# environment
LC_ALL = C
# environment
HOSTTYPE = x86_64
# automatic
^F = $(notdir $^)
# default
SUFFIXES := 
# makefile (from 'Makefile', line 29)
OBJ_FOLDER = ./obj/
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# default
.RECIPEPREFIX := 
# environment
LANG = C
# environment
TERM = xterm-256color
# environment
WSL_DISTRO_NAME = Ubuntu-20.04
# variable set hash-table stats:
# Load=79/1024=8%, Rehash=0, Collisions=10/129=8%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 2064, inode 57183): 13 files, no impossibilities.
# ./src (device 2064, inode 93606): 8 files, no impossibilities.
# src (device 2064, inode 93606): 8 files, no impossibilities.

# 29 files, no impossibilities in 3 directories.

# Implicit Rules

obj/%.o: src/%.cpp
#  recipe to execute (from 'Makefile', line 78):
	$(CC) $(CXXFLAGS) -c $< -o $@ -I$(INCLUDE_FOLDER)

# 1 implicit rules, 0 (0.0%) terminal.

# Files

all: build run
#  Command line target.
#  Implicit rule search has been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/12=0%

perf: bin//tp3.exe
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 48):
	$(EXE) -i $(ASSETS)perf_user_25k.txt -o $(OUT_FOLDER)perf_user_25kOut.txt -p /tmp/perf_user_25k.out
	$(EXE) -i $(ASSETS)perf_user_50k.txt -o $(OUT_FOLDER)perf_user_50kOut.txt -p /tmp/perf_user_50k.out
	$(EXE) -i $(ASSETS)perf_user_75k.txt -o $(OUT_FOLDER)perf_user_75kOut.txt -p /tmp/perf_user_75k.out
	$(EXE) -i $(ASSETS)perf_user_100k.txt -o $(OUT_FOLDER)perf_user_100kOut.txt -p /tmp/perf_user_100k.out
	$(EXE) -i $(ASSETS)perf_user_125k.txt -o $(OUT_FOLDER)perf_user_125kOut.txt -p /tmp/perf_user_125k.out
	$(EXE) -i $(ASSETS)perf_user_150k.txt -o $(OUT_FOLDER)perf_user_150kOut.txt -p /tmp/perf_user_150k.out
	$(EXE) -i $(ASSETS)perf_user_175k.txt -o $(OUT_FOLDER)perf_user_175kOut.txt -p /tmp/perf_user_175k.out
	$(EXE) -i $(ASSETS)perf_user_200k.txt -o $(OUT_FOLDER)perf_user_200kOut.txt -p /tmp/perf_user_200k.out
	$(EXE) -i $(ASSETS)perf_user_225k.txt -o $(OUT_FOLDER)perf_user_225kOut.txt -p /tmp/perf_user_225k.out
	$(EXE) -i $(ASSETS)perf_user_250k.txt -o $(OUT_FOLDER)perf_user_250kOut.txt -p /tmp/perf_user_250k.out
	$(EXE) -i $(ASSETS)perf_message_50.txt -o $(OUT_FOLDER)perf_message_50Out.txt -p /tmp/perf_message_50.out
	$(EXE) -i $(ASSETS)perf_message_100.txt -o $(OUT_FOLDER)perf_message_100Out.txt -p /tmp/perf_message_100.out
	$(EXE) -i $(ASSETS)perf_message_150.txt -o $(OUT_FOLDER)perf_message_150Out.txt -p /tmp/perf_message_150.out
	$(EXE) -i $(ASSETS)perf_message_200.txt -o $(OUT_FOLDER)perf_message_200Out.txt -p /tmp/perf_message_200.out
	$(EXE) -i $(ASSETS)perf_message_250.txt -o $(OUT_FOLDER)perf_message_250Out.txt -p /tmp/perf_message_250.out
	$(EXE) -i $(ASSETS)perf_message_300.txt -o $(OUT_FOLDER)perf_message_300Out.txt -p /tmp/perf_message_300.out
	$(EXE) -i $(ASSETS)perf_message_350.txt -o $(OUT_FOLDER)perf_message_350Out.txt -p /tmp/perf_message_350.out
	$(EXE) -i $(ASSETS)perf_message_400.txt -o $(OUT_FOLDER)perf_message_400Out.txt -p /tmp/perf_message_400.out
	$(EXE) -i $(ASSETS)perf_message_450.txt -o $(OUT_FOLDER)perf_message_450Out.txt -p /tmp/perf_message_450.out
	$(EXE) -i $(ASSETS)perf_message_500.txt -o $(OUT_FOLDER)perf_message_500Out.txt -p /tmp/perf_message_500.out
	$(EXE) -i $(ASSETS)perf_size_15.txt -o $(OUT_FOLDER)perf_size_15Out.txt -p /tmp/perf_size_15.out
	$(EXE) -i $(ASSETS)perf_size_100.txt -o $(OUT_FOLDER)perf_size_100Out.txt -p /tmp/perf_size_100.out
	$(EXE) -i $(ASSETS)perf_size_200.txt -o $(OUT_FOLDER)perf_size_200Out.txt -p /tmp/perf_size_200.out
	$(EXE) -i $(ASSETS)perf_frequency_normal.txt -o $(OUT_FOLDER)perf_frequency_normalOut.txt -p /tmp/perf_frequency_normal.out
	$(EXE) -i $(ASSETS)perf_frequency_random.txt -o $(OUT_FOLDER)perf_frequency_randomOut.txt -p /tmp/perf_frequency_random.out
	

obj/Main.o: src/Main.cpp
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'Main'
#  Last modified 2022-07-18 13:38:17.5408605
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'Makefile', line 78):
	$(CC) $(CXXFLAGS) -c $< -o $@ -I$(INCLUDE_FOLDER)

# Not a target:
src/Email.cpp:
#  Implicit rule search has been done.
#  Last modified 2022-07-17 18:45:26.8635883
#  File has been updated.
#  Successfully updated.

obj/BinaryTree.o: src/BinaryTree.cpp
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'BinaryTree'
#  Last modified 2022-07-17 18:41:28.4435883
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'Makefile', line 78):
	$(CC) $(CXXFLAGS) -c $< -o $@ -I$(INCLUDE_FOLDER)

# Not a target:
bin//tp3.exe:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2022-07-18 16:46:44.7421781
#  File has been updated.
#  Successfully updated.

# Not a target:
src/memlog.cpp:
#  Implicit rule search has been done.
 
#  Last modified 2022-06-16 20:22:45.7251151
#  File has been updated.
#  Successfully updated.

build: obj/memlog.o obj/Main.o obj/Hash.o obj/Node.o obj/BinaryTree.o obj/Email.o
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: ''
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := build
# automatic
# % := 
# automatic
# * := 
# automatic
# + := obj/memlog.o obj/Main.o obj/Hash.o obj/Node.o obj/BinaryTree.o obj/Email.o
# automatic
# | := 
# automatic
# < := obj/memlog.o
# automatic
# ^ := obj/memlog.o obj/Main.o obj/Hash.o obj/Node.o obj/BinaryTree.o obj/Email.o
# automatic
# ? := obj/memlog.o obj/Main.o obj/Hash.o obj/Node.o obj/BinaryTree.o obj/Email.o
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=3/20=15%
#  recipe to execute (from 'Makefile', line 75):
	$(CC) $(CXXFLAGS) -o $(BIN_FOLDER)$(TARGET) $(OBJ)

obj/Node.o: src/Node.cpp
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'Node'
#  Last modified 2022-07-10 17:24:02.2236207
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'Makefile', line 78):
	$(CC) $(CXXFLAGS) -c $< -o $@ -I$(INCLUDE_FOLDER)

# Not a target:
src/Hash.cpp:
#  Implicit rule search has been done.
#  Last modified 2022-07-17 20:21:06.2435883
#  File has been updated.
#  Successfully updated.

mem: bin//tp3.exe
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 45):
	$(EXE) -i entrada.txt -o saida.txt -p /tmp/tp3memlog.out -l

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
src/Main.cpp:
#  Implicit rule search has been done.
#  Last modified 2022-07-18 13:37:49.5608605
#  File has been updated.
#  Successfully updated.

run: bin//tp3.exe
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 81):
	$(EXE) -i entrada.txt -o saida.txt -p /tmp/runlog.out

obj/Email.o: src/Email.cpp
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'Email'
#  Last modified 2022-07-17 18:45:29.7035883
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'Makefile', line 78):
	$(CC) $(CXXFLAGS) -c $< -o $@ -I$(INCLUDE_FOLDER)

# Not a target:
src/BinaryTree.cpp:
#  Implicit rule search has been done.
#  Last modified 2022-07-17 18:41:26.4135883
#  File has been updated.
#  Successfully updated.

obj/memlog.o: src/memlog.cpp
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'memlog'
#  Last modified 2022-07-06 18:47:37.5889645
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'Makefile', line 78):
	$(CC) $(CXXFLAGS) -c $< -o $@ -I$(INCLUDE_FOLDER)

# Not a target:
src/Node.cpp:
#  Implicit rule search has been done.
#  Last modified 2022-07-10 17:23:58.7336207
#  File has been updated.
#  Successfully updated.

obj/Hash.o: src/Hash.cpp
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'Hash'
#  Last modified 2022-07-18 13:36:32.9808605
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'Makefile', line 78):
	$(CC) $(CXXFLAGS) -c $< -o $@ -I$(INCLUDE_FOLDER)

# files hash-table stats:
# Load=21/1024=2%, Rehash=0, Collisions=0/64=0%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 50 / storage = 459 B / avg = 9 B
# current buf: size = 8162 B / used = 459 B / count = 50 / avg = 9 B

# strcache performance: lookups = 74 / hit rate = 32%
# hash-table stats:
# Load=50/8192=1%, Rehash=0, Collisions=3/74=4%
# Finished Make data base on Mon Jul 18 16:46:53 2022

 
